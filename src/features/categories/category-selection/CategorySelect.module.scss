@use '../../../styles/config/mixins' as *;

$gap: 2px;

.categorySelect {
  @include flex(column);
}

.modalContent {
  /* Retaining existing styles */
  background-color: white; /* Transparent background */
}

.label {
  font-weight: var(--font-weight-medium);
  color: var(--color-neutral-2);
  font-size: var(--font-size-md);
  margin-bottom: var(--spacing-md);
}

.sectionBackgroundWhite {
  background-color: white;
}

.textFieldWhite {
  background-color: white;
  border: none;
}

.select {
  @include flex(row, space-between, center);
  @include focus;

  color: var(--color-neutral-2);
  border-radius: var(--border-radius-inner);

  .placeholder {
    @include text-truncate;
    padding-right: var(--spacing-sm);
    flex-grow: 1;
  }

  .selectedLabel {
    font-size: 1.2rem; // Adjust size as needed
    font-weight: bold;
    margin-bottom: 0.5rem; // Add space below the label
    color: #333; // Change color as needed
  }

  .fixedLabel {
    position: absolute;
    top: -30px; // Move this higher by increasing the negative value
    left: 0;
    font-size: 1.2rem;
    font-weight: bold;
    color: #333;
    background-color: white; // Prevent overlap with other elements
    padding: 0 5px;
    z-index: 10; // Ensure it stays above other content
  }

  &.isOpen {
    border-bottom-right-radius: 0;
    border-bottom-left-radius: 0;
    margin-bottom: 0;
  }
}

.sideButton,
.toggleSelect,
.selectIcon {
  @include flex(row, center, center);
  box-sizing: content-box;
  color: var(--color-neutral-3);

  svg {
    max-width: fit-content;
  }
}

.selectIcon {
  padding-left: var(--spacing-lg);
  padding-right: var(--spacing-md);
  padding-top: var(--spacing-sm);
  padding-bottom: var(--spacing-sm);
}

.toggleSelect {
  border-left: $gap solid var(--color-neutral-4);
  padding: var(--spacing-sm) var(--spacing-md);
}

.sideButton {
  border-left: $gap solid var(--color-neutral-4); // Keep the divider on the left side
  padding: var(--spacing-sm) var(--spacing-md);
}

.selectedCategoriesWrapper {
  width: 100%;
  max-width: 63vw;

  .selectedCategories {
    @include flex(row, flex-start, center);
    gap: var(--spacing-md);
    flex-wrap: wrap;
    margin: 5% 0;
  }
}

.modalTitle {
  margin-right: auto !important;
  margin-left: var(--spacing-lg) !important;
  background-color: transparent;
}

.categoryBadges {
  position: relative; // Ensure this is relative for .fixedLabel to position correctly
  margin: var(--spacing-lg) 0;
  @include flex(column);
  gap: var(--spacing-md);
  transform: translate(12px, -20px); // Moves 20px left and 20px upwards
}


.modalContent {
  @include flex(column);
  padding: var(--spacing-lg);
  gap: var(--spacing-md);
  background-color: white;
  overflow-y: scroll;
}

.selectionList {
  border-radius: var(--border-radius-inner);
  color: var(--color-neutral-2);
}

.selectItem {
  @include flex(row, space-between, center); // Align items horizontally with space between
  @include focus;

  height: var(--category-select-item-height);
  border-bottom: 2px solid var(--color-neutral-4);

  &Content {
    padding: 0 var(--spacing-md);
    flex-grow: 1; // Ensure the content takes up available space
  }

  .createNewCategory {
    outline: none;
    text-decoration: underline;
    padding: 0 var(--spacing-md);
  }

  &:last-of-type {
    border-bottom: none;
    border-bottom-left-radius: var(--border-radius-inner);
    border-bottom-right-radius: var(--border-radius-inner);
  }

  &:first-of-type {
    border-top-left-radius: var(--border-radius-inner);
    border-top-right-radius: var(--border-radius-inner);
  }
}

.headerContainer {
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
}

.saveButton {
  background: transparent;
  color: #007bff;
  border: none;
  cursor: pointer;
  padding: 0;
  font-size: 20px;
  text-decoration: none;

  &:hover {
    color: #0056b3;
  }

  &:focus,
  &:active {
    outline: none;
    box-shadow: none;
  }
}

.textFieldOverride {
  background-color: transparent !important;
  border: none;
}

.plusButton {
  display: flex; // Use flexbox for centering
  justify-content: center; // Center the icon horizontally
  align-items: center; // Center the icon vertically
  cursor: pointer;
  color: #007bff;

  transform: scale(1.5); // Increase scale to 1.5 for a bigger size
  padding: var(--spacing-sm); // Adjust padding for a larger click area

  // Optional hover effect to visually indicate interactivity
  &:hover {
    transform: scale(1.6); // Increase scale on hover for a larger effect
  }

  svg {
    width: 2rem; // Adjust width of the SVG (if necessary)
    height: 2rem; // Adjust height of the SVG
  }
}
.border {
  border-bottom: 20px solid #ccc; // Light grey color for the border
  margin: 10px 0; // Space between bordered sections
  // padding: 10px; // Padding inside the bordered sections
}
