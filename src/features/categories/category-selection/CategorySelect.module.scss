@use '../../../styles/config/mixins' as *;
$gap: 2px;

.categorySelect {
  @include flex(column); // Set to row for horizontal layout
  gap: 5px; // Gap between the elements
  max-width: 100%;
  display: flex;
  justify-content: flex-start; // Align items to the left
}

.modalContent {
  @include flex(column);
  padding: var(--spacing-lg);
  gap: var(--spacing-md);
  background-color: white;
  overflow-y: auto; // or scroll if you want a fixed height with scroll
}

.label {
  font-weight: var(--font-weight-medium);
  color: var(--color-neutral-2);
  font-size: var(--font-size-md);
  margin-bottom: var(--spacing-md);
}

.sectionBackgroundWhite {
  background-color: white;
}

.textFieldWhite {
  background-color: white;
  border: none;
}

.select {
  @include flex(row, space-between, center); // Ensure select items are aligned correctly
  width: 100%;
  @include focus;
  color: var(--color-neutral-2);
  border-radius: var(--border-radius-inner);
  position: relative; // Adjust if needed to maintain positioning

  .placeholder {
    @include text-truncate;
    padding-right: var(--spacing-sm);
    flex-grow: 1;
  }

  .selectedLabel {
    font-size: 1.2rem;
    font-weight: bold;
    margin-bottom: 0.5rem;
    color: #333;
  }

  .fixedLabel {
    position: relative;
    top: -30px;
    left: 0;
    font-size: 1.2rem;
    font-weight: bold;
    color: #333;
    background-color: white;
  }

  &.isOpen {
    border-bottom-right-radius: 0;
    border-bottom-left-radius: 0;
    margin-bottom: 0;
  }
}

.fixedLabelSelectItems {
  margin-bottom: var(--spacing-md);
  transform: translateX(15px);
}

.sideButton,
.toggleSelect,
.selectIcon {
  @include flex(row, center, center);
  box-sizing: content-box;
  color: var(--color-neutral-3);
  position: static;

  svg {
    max-width: fit-content;
  }
}

.selectIcon {
  position: static;
  padding: var(--spacing-sm);
  flex-shrink: 0; // Ensure selectIcon does not shrink
}

.toggleSelect {
  border-left: $gap solid var(--color-neutral-4);
  padding: var(--spacing-sm);
  position: relative;
}

.sideButton {
  border-left: $gap solid var(--color-neutral-4);
  padding: var(--spacing-sm);
}

.selectedCategoriesWrapper {
  display: flex;
  flex-wrap: wrap;
  gap: var(--spacing-xs);
  justify-content: flex-start; // Align items to the left
}

.modalTitle {
  margin-right: auto !important;
  margin-left: var(--spacing-lg) !important;
  background-color: transparent;
}

.categoryBadges {
  position: relative;
  margin: var(--spacing-lg) 0;
  @include flex(column);
  gap: var(--spacing-md);
  transform: translate(12px, -20px);
}

.selectItems {
  position: relative;
  margin: var(--spacing-lg) 0;
  display: flex;
  flex-direction: column;
  gap: var(--spacing-md);
}

.selectedItems {
  position: relative;
  margin: var(--spacing-lg) 0;
  transform: translateX(10px);
  display: flex;
  flex-direction: column;
}

.selectionList {
  border-radius: var(--border-radius-inner);
  color: var(--color-neutral-2);
}

.selectItem {
  @include flex(row, space-between, center);
  @include focus;
  height: var(--category-select-item-height);
  border-bottom: 2px solid var(--color-neutral-4);
  align-items: center;

  &Content {
    padding: 0 var(--spacing-md);
    flex-grow: 1;
  }

  .createNewCategory {
    outline: none;
    text-decoration: underline;
    padding: 0 var(--spacing-md);
  }

  &:last-of-type {
    border-bottom: none;
    border-bottom-left-radius: var(--border-radius-inner);
    border-bottom-right-radius: var(--border-radius-inner);
  }

  &:first-of-type {
    border-top-left-radius: var(--border-radius-inner);
    border-top-right-radius: var(--border-radius-inner);
  }
}

.sideButton {
  display: flex;
  align-items: center;
  justify-content: center;
  box-sizing: content-box;
  color: var(--color-neutral-3);
}

.plusButton {
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  color: #007bff;
  transform: scale(1.5);
  padding: var(--spacing-sm);

  &:hover {
    transform: scale(1.6);
  }

  svg {
    width: 2rem;
    height: 2rem;
  }
}

.border {
  border-bottom: 2px solid #ccc;
  margin: 10px 0;
}

.border_input {
  margin: 10px 0;
  background-color: var(--color-neutral-5);
  border-radius: var(--border-radius-inner);
}

.flexcontainer {
  display: flex;
  flex-wrap: wrap; // Allow wrapping of items
  justify-content: flex-start; // Align items to the left
  width: 100%; // Full width of the container
  gap: 5px; // Space between items

  @media (max-width: 768px) {
    gap: 2px; // Reduce gap for smaller screens
  }
}

.flexcontainer > div {
  display: flex;
  align-items: flex-start; 
  flex: 0 0 calc(25% - 5px);
  height: 50px;

  @media (max-width: 768px) {
    flex: 0 0 calc(50% - 2px); 
    height: 40px; 
  }

  @media (max-width: 480px) {
    flex: 0 0 25%; // Stack items on mobile
  }
}
